<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>Digital Garden</title>
      <link>https://doodoo3804.github.io/second-brain</link>
      <description>Last 10 notes on Digital Garden</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>RAM의 특징과 종류</title>
    <link>https://doodoo3804.github.io/second-brain/Computer-Science/Computer-structure-&-OS/RAM</link>
    <guid>https://doodoo3804.github.io/second-brain/Computer-Science/Computer-structure-&-OS/RAM</guid>
    <description>RAM의 특징 § 컴퓨터 전원을 끄면 RAM에 저장된 데이터가 모두 사라지기 때문에 휘발성 저장 장치라고 한다. Info 하드 디스크나, SSD, CD-ROM, USB 메모리와 같은 보조기억장치는 비휘발성 저장 장치라고 한다. CPU는 직접 보조기억장치에 접근하지 못한다.</description>
    <pubDate>Sat, 02 Dec 2023 09:22:08 GMT</pubDate>
  </item><item>
    <title>파이썬으로 프로그램 만들기</title>
    <link>https://doodoo3804.github.io/second-brain/Framework-&-Programming-Language/Python/Pyinstaller</link>
    <guid>https://doodoo3804.github.io/second-brain/Framework-&-Programming-Language/Python/Pyinstaller</guid>
    <description>Pyinstaller? § Pyinstaller를 사용하면 파이썬으로 제작한 프로그램을 간단하게 실행 파일로 만들 수 있다. 실행 파일에 파이썬도 포함되어 있기 때문에 파이썬이 설치되지 않은 pc에서도 실행이 가능하다. 쉘에 아래 명령어를 통해 설치할 수 있다. pip install pyinstaller 프로그램으로 만들어 실행할 파이썬 파일을 작성한다.</description>
    <pubDate>Fri, 01 Dec 2023 10:09:26 GMT</pubDate>
  </item><item>
    <title>레지스터</title>
    <link>https://doodoo3804.github.io/second-brain/Computer-Science/Computer-structure-&-OS/%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0</link>
    <guid>https://doodoo3804.github.io/second-brain/Computer-Science/Computer-structure-&-OS/%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0</guid>
    <description>프로그램 카운터 § 메모리에서 가져올 명령어의 주소, 즉 메모리에서 읽을 명령어의 주소를 저장한다. 명령어 포인터라고도 불린다. 명령어 레지스터 § 해석할 명령어, 즉 방금 메모리에서 읽어 들인 명령어를 저장하는 레지스터이다. 메모리 주소 레지스터 § 메모리의 주소를 저장하는 레지스터이다.</description>
    <pubDate>Fri, 01 Dec 2023 09:03:14 GMT</pubDate>
  </item><item>
    <title>Welcome to DooDoo&#039;s Digital Garden</title>
    <link>https://doodoo3804.github.io/second-brain/</link>
    <guid>https://doodoo3804.github.io/second-brain/</guid>
    <description>이 페이지는 제텔카스텐 기법을 준수하여 옵시디언에서 작성되었습니다. 전체 두뇌 연결 § Warning 추후 구현 예정 Tip GitHub Pages에 Quartz를 배포하고 관리하는 방법은 quartz 4.0와 Quartz v4를 참고 추후 구현 기능 예정 Tags 만 모아서 보기 (현재 태그를 누르면 tag의 글들이 보임) &gt;&gt; 취소 그래프 뷰가 더러워 질 수 있음 .</description>
    <pubDate>Thu, 30 Nov 2023 17:11:54 GMT</pubDate>
  </item><item>
    <title>N + 1 문제</title>
    <link>https://doodoo3804.github.io/second-brain/Computer-Science/Database/n+1</link>
    <guid>https://doodoo3804.github.io/second-brain/Computer-Science/Database/n+1</guid>
    <description>N+1 문제란? § 연관 관계에서 발생하는 이슈로 연관 관계가 설정된 엔티티를 조회할 경우에 조회된 데이터 갯수(n) 만큼 연관 관계의 조회 쿼리가 추가로 발생하여 데이터를 읽어오게 된다. 즉, 의도하지 않은 n번의 쿼리가 추가적으로 발생한다. 미완 .</description>
    <pubDate>Thu, 30 Nov 2023 17:11:54 GMT</pubDate>
  </item><item>
    <title>컴퓨터의 구성</title>
    <link>https://doodoo3804.github.io/second-brain/Computer-Science/Computer-structure-&-OS/%EC%BB%B4%ED%93%A8%ED%84%B0</link>
    <guid>https://doodoo3804.github.io/second-brain/Computer-Science/Computer-structure-&-OS/%EC%BB%B4%ED%93%A8%ED%84%B0</guid>
    <description>컴퓨터의 4가지 핵심 부품 § 컴퓨터의 핵심 부품은 중앙처리장치(Central Processing Unit), 주기억장치(main memory), 보조기억장치(secondary memory), 입출력장치(input/ontput device)이다. Info 주기억장치는 크게 RAM(Radnom Access Memory)과 ROM(Random Only Memory)이 있지만 메모리 즉 주기억장치는 주로 RAM을 가리킨다.</description>
    <pubDate>Thu, 30 Nov 2023 17:11:54 GMT</pubDate>
  </item><item>
    <title>ALU와 제어장치</title>
    <link>https://doodoo3804.github.io/second-brain/Computer-Science/Computer-structure-&-OS/ALU</link>
    <guid>https://doodoo3804.github.io/second-brain/Computer-Science/Computer-structure-&-OS/ALU</guid>
    <description>ALU § ALU(Arithmetic Logic Unit)은 컴퓨터 내부에서 수행되는 대부분의 연산을 담당하기 때문에 피연산자와 수행할 연산이 필요하다. ALU는 레지스터를 통해 피연산자를 받고, 제어장치로부터 수행할 연산을 알려주는 제어신호를 받는다. 받아들인 정보로 산술 연산, 논리 연산 등 다양한 연산을 수행한다.</description>
    <pubDate>Thu, 30 Nov 2023 17:11:54 GMT</pubDate>
  </item><item>
    <title>트라이</title>
    <link>https://doodoo3804.github.io/second-brain/Algorithm/Tree/%ED%8A%B8%EB%9D%BC%EC%9D%B4</link>
    <guid>https://doodoo3804.github.io/second-brain/Algorithm/Tree/%ED%8A%B8%EB%9D%BC%EC%9D%B4</guid>
    <description>트라이 § Trie 검색 트리의 일종 트라이는 문자열을 저장하고 효율적으로 탐색하기 위한 트리 형태의 자료구조이다. 트라이는 문자열의 접두사(Prefix)를 이용하여 트리를 구성하므로, 특히 문자열 검색에 있어 유용하다. 이는 흔히 볼 수 있는 자동완성 기능, 사전 검색에서 사용된다.</description>
    <pubDate>Thu, 30 Nov 2023 17:11:54 GMT</pubDate>
  </item><item>
    <title>최소 스패닝 트리</title>
    <link>https://doodoo3804.github.io/second-brain/Algorithm/Tree/%EC%B5%9C%EC%86%8C-%EC%8A%A4%ED%8C%A8%EB%8B%9D-%ED%8A%B8%EB%A6%AC</link>
    <guid>https://doodoo3804.github.io/second-brain/Algorithm/Tree/%EC%B5%9C%EC%86%8C-%EC%8A%A4%ED%8C%A8%EB%8B%9D-%ED%8A%B8%EB%A6%AC</guid>
    <description>최소 신장 트리 § Minimun Spanning Tree (MST) 모든 정점을 잇지만 사이클이 없는 부분 그래프 하나의 그래프가 있을 때 모든 노드를 포함하면서 사이클이 존재하지 않는 부분 그래프를 의미한다. 최소한의 비용으로 신장 트리를 찾는 것이 MST 알고리즘이다.</description>
    <pubDate>Thu, 30 Nov 2023 17:11:54 GMT</pubDate>
  </item><item>
    <title>세그먼트 트리</title>
    <link>https://doodoo3804.github.io/second-brain/Algorithm/Tree/%EC%84%B8%EA%B7%B8%EB%A8%BC%ED%8A%B8-%ED%8A%B8%EB%A6%AC</link>
    <guid>https://doodoo3804.github.io/second-brain/Algorithm/Tree/%EC%84%B8%EA%B7%B8%EB%A8%BC%ED%8A%B8-%ED%8A%B8%EB%A6%AC</guid>
    <description>세그먼트 트리 § Segment Tree 구간을 저장하기 위한 이진 트리 주어진 전체에서 특정 구간에 대한 연산을 구해야 하는 경우, 가장 처음 모든 합을 구해 놓고 계산하는 방법이 있을 수 있다. 세그먼트 트리는 여러 개의 데이터가 연속적으로 존재할 때 특정한 범위의 데이터의 합을 구하는 빠른 방법이다.</description>
    <pubDate>Thu, 30 Nov 2023 17:11:54 GMT</pubDate>
  </item>
    </channel>
  </rss>